# AWS Disaster Recovery Web Application - Example Terraform Variables
# Copy this file to terraform.tfvars and customize the values

# Project Configuration
project_name = "web-app-dr"
environment = "production"

# AWS Regions
primary_region = "us-east-1"
secondary_region = "us-west-2"

# Network Configuration
primary_vpc_cidr = "10.0.0.0/16"
secondary_vpc_cidr = "10.1.0.0/16"

# Domain Configuration
domain_name = "example.com"
health_check_path = "/health"

# EC2 Configuration
instance_type = "t3.medium"
ami_id_primary = "ami-0abcdef1234567890"  # Update with actual AMI ID for us-east-1
ami_id_secondary = "ami-0abcdef1234567890"  # Update with actual AMI ID for us-west-2
key_pair_name = "my-key-pair"

# Auto Scaling Configuration
asg_min_size = 2
asg_max_size = 10
asg_desired_capacity = 2

# RDS Configuration
rds_instance_class = "db.t3.medium"
rds_allocated_storage = 100
rds_max_allocated_storage = 1000
mysql_engine_version = "8.0"
database_name = "webapp"
database_username = "admin"
database_password = "MySecurePassword123!"  # Use AWS Secrets Manager in production
backup_retention_period = 7
backup_window = "03:00-04:00"
maintenance_window = "sun:04:00-sun:05:00"

# Security Configuration
enable_encryption = true
enable_deletion_protection = true
enable_final_snapshot = true

# Monitoring Configuration
enable_enhanced_monitoring = true
monitoring_interval = 60
cloudwatch_log_retention = 30

# Backup Configuration
enable_point_in_time_recovery = true

# Notification Configuration
notification_email = "admin@example.com"
enable_slack_notifications = false
slack_webhook_url = ""

# Cost Optimization
enable_schedule_scaling = false
secondary_region_min_instances = 0

# Compliance Configuration
enable_cloudtrail = true
enable_config = true

# Additional Tags
additional_tags = {
  Owner       = "platform-team"
  CostCenter  = "infrastructure"
  Compliance  = "standard"
  DR          = "enabled"
}