# GitHub Actions Enterprise CI/CD Platform - Terraform Variables Example
# Copy this file to terraform.tfvars and customize the values for your deployment

# Project Configuration
project_name = "github-actions-enterprise"
environment  = "dev"
aws_region   = "us-east-1"

# GitHub Configuration
github_organization = "your-organization-name"

# Optional: GitHub App Configuration (recommended for production)
# github_app_id = "123456"
# github_app_private_key = "-----BEGIN RSA PRIVATE KEY-----\n...\n-----END RSA PRIVATE KEY-----"

# Network Configuration
vpc_cidr = "10.0.0.0/16"
availability_zones = [
  "us-east-1a",
  "us-east-1b"
]

# Public Subnets (for NAT Gateways and Load Balancer)
public_subnet_cidrs = [
  "10.0.1.0/24",
  "10.0.2.0/24"
]

# Private Subnets (for GitHub Actions Runners)
private_subnet_cidrs = [
  "10.0.10.0/24",
  "10.0.20.0/24"
]

# Runner Configuration
runner_instance_type = "t3.large"
runner_min_size = 2
runner_max_size = 10
runner_desired_capacity = 3

# Runner AMI Configuration
# Leave empty to use the latest Amazon Linux 2 AMI
# runner_ami_id = "ami-0abcdef1234567890"

# Instance Storage Configuration
runner_root_volume_size = 50
runner_root_volume_type = "gp3"
runner_root_volume_encrypted = true

# Auto Scaling Configuration
scale_up_cooldown = 300    # 5 minutes
scale_down_cooldown = 300  # 5 minutes

# Target tracking scaling policy
target_cpu_utilization = 70
scale_up_adjustment = 2
scale_down_adjustment = -1

# Security Configuration
allowed_cidr_blocks = [
  "10.0.0.0/16"  # VPC CIDR
]

# SSH access (optional, for debugging)
# enable_ssh_access = true
# ssh_key_name = "my-key-pair"
# ssh_allowed_cidr_blocks = ["10.0.0.0/16"]

# Monitoring and Logging
enable_detailed_monitoring = true
log_retention_days = 30
enable_cloudwatch_agent = true

# S3 Configuration
artifacts_bucket_name = ""  # Leave empty for auto-generated name
cache_bucket_name = ""      # Leave empty for auto-generated name
s3_force_destroy = false    # Set to true for non-production environments

# Backup Configuration
backup_retention_days = 7
enable_backup = true

# Encryption Configuration
enable_encryption = true
# kms_key_id = ""  # Leave empty to create a new KMS key

# Load Balancer Configuration (optional)
enable_load_balancer = false
# enable_load_balancer = true
# certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"

# Domain Configuration (optional)
# domain_name = "github-actions.example.com"
# create_route53_record = true

# Webhook Configuration (optional)
enable_webhook = false
# webhook_secret = "your-webhook-secret"

# GitHub Actions Configuration
runner_group = "default"
runner_labels = [
  "self-hosted",
  "linux",
  "x64",
  "aws"
]

# Additional runner labels for specific use cases
# runner_labels = [
#   "self-hosted",
#   "linux",
#   "x64", 
#   "aws",
#   "docker",
#   "kubernetes"
# ]

# Runner Idle Configuration
runner_idle_timeout = 1800  # 30 minutes
max_runners_idle = 2

# Security Groups Configuration
additional_security_group_ids = []

# Custom security group rules (optional)
# additional_ingress_rules = [
#   {
#     from_port   = 8080
#     to_port     = 8080
#     protocol    = "tcp"
#     cidr_blocks = ["10.0.0.0/16"]
#     description = "Application port"
#   }
# ]

# Notification Configuration
notification_email = ""  # Email for SNS notifications
# slack_webhook_url = ""  # Slack webhook for notifications

# Resource Tags
tags = {
  Project     = "github-actions-enterprise"
  Environment = "dev"
  Owner       = "devops-team"
  ManagedBy   = "terraform"
  CostCenter  = "engineering"
  Purpose     = "ci-cd"
}

# Advanced Configuration

# User Data Script Customization
# custom_user_data = ""  # Additional user data script content

# CloudWatch Custom Metrics
enable_custom_metrics = true
custom_metrics_namespace = "GitHub/Actions"

# Performance Tuning
enable_placement_group = false
# placement_group_strategy = "cluster"  # cluster, partition, or spread

# Spot Instance Configuration (cost optimization)
use_spot_instances = false
# spot_price = "0.05"  # Maximum price per hour
# spot_allocation_strategy = "diversified"  # lowest-price, diversified, capacity-optimized

# Mixed Instances Policy (for cost optimization)
enable_mixed_instances = false
# on_demand_percentage = 20
# spot_allocation_strategy = "capacity-optimized"
# instance_types = ["t3.large", "t3.xlarge", "m5.large", "m5.xlarge"]

# Lambda Function Configuration (for webhook)
# lambda_timeout = 30
# lambda_memory_size = 128

# API Gateway Configuration (for webhook)
# api_gateway_stage_name = "prod"
# api_gateway_throttle_burst_limit = 1000
# api_gateway_throttle_rate_limit = 500

# CloudWatch Dashboard Configuration
enable_dashboard = true
dashboard_name = ""  # Leave empty for auto-generated name

# Alarm Configuration
enable_alarms = true
alarm_cpu_threshold = 80
alarm_memory_threshold = 80
alarm_disk_threshold = 85

# SNS Topic Configuration
create_sns_topic = true
sns_topic_name = ""  # Leave empty for auto-generated name

# Route53 Health Check Configuration
# enable_health_check = true
# health_check_path = "/health"
# health_check_interval = 30

# WAF Configuration (for ALB)
# enable_waf = true
# waf_ip_whitelist = ["1.2.3.4/32"]

# VPC Flow Logs Configuration
enable_vpc_flow_logs = true
flow_logs_retention_days = 14

# Session Manager Configuration
enable_session_manager = true
session_manager_log_retention = 30

# Systems Manager Patch Management
enable_patch_management = true
patch_group = "github-runners"
maintenance_window_schedule = "cron(0 2 ? * SUN *)"  # Sunday 2 AM UTC

# CloudTrail Configuration
enable_cloudtrail = false
# cloudtrail_bucket_name = ""
# cloudtrail_retention_days = 90

# Config Rules Configuration
enable_config_rules = false
# compliance_rules = ["ec2-security-group-attached-to-eni", "encrypted-volumes"]

# Example Production Configuration
# Uncomment and modify for production deployment:

# project_name = "github-actions-prod"
# environment = "production"
# 
# # Larger capacity for production
# runner_min_size = 5
# runner_max_size = 50
# runner_desired_capacity = 10
# runner_instance_type = "m5.xlarge"
# 
# # Enhanced security
# enable_encryption = true
# log_retention_days = 90
# backup_retention_days = 30
# 
# # High availability
# availability_zones = ["us-east-1a", "us-east-1b", "us-east-1c"]
# enable_load_balancer = true
# 
# # Monitoring and alerting
# enable_detailed_monitoring = true
# enable_alarms = true
# notification_email = "devops-alerts@company.com"
# 
# # Compliance
# enable_cloudtrail = true
# enable_config_rules = true
# enable_vpc_flow_logs = true
# 
# tags = {
#   Project     = "github-actions-prod"
#   Environment = "production"
#   Owner       = "devops-team"
#   ManagedBy   = "terraform"
#   CostCenter  = "engineering"
#   Compliance  = "required"
#   Backup      = "required"
# }