# Terraform Variables Example File for Juniper Mist AI Network Platform
# Copy this file to terraform.tfvars and customize for your deployment

# Required Variables
mist_api_token     = "your-mist-api-token-here"
organization_name  = "Your Organization Name"

# Optional Provider Configuration
mist_api_host = "https://api.mist.com"  # Default Mist API endpoint
environment   = "production"            # production, staging, development, or test

# Site Configuration
# Define all sites to be deployed with their specific settings
sites = {
  "headquarters" = {
    address      = "123 Main Street, Anytown, ST 12345, USA"
    country_code = "US"
    timezone     = "America/New_York"
    latitude     = 40.7128
    longitude    = -74.0060
    
    # Site-specific features
    rtls_enabled              = false
    rtls_track_asset          = false
    location_services_enabled = true
    analytics_enabled         = true
    engagement_enabled        = false
    locate_unconnected_clients = false
    mesh_enabled              = false
    mesh_allow_dfs           = false
    mesh_enable_crm          = false
    
    # Auto upgrade settings
    auto_upgrade_enabled = true
    auto_upgrade_version = ""      # Empty for latest
    auto_upgrade_time    = "02:00"  # 2 AM
    auto_upgrade_day     = "sun"    # Sunday
    
    # Device thresholds
    device_updown_threshold = 0
    keep_wlans_up_if_down  = false
    
    # Access Points (if pre-defined)
    access_points = {
      "ap-floor1-01" = {
        device_id     = "AP-SERIAL-001"
        name          = "Floor 1 Reception AP"
        map_id        = ""
        x_coordinate  = 100
        y_coordinate  = 200
        led_brightness = 255
        
        # Radio settings
        radio_24_enabled     = true
        radio_24_disable_11b = false
        radio_5_enabled      = true
        radio_6_enabled      = false  # Set to true for Wi-Fi 6E APs
        
        # Additional features
        usb_enabled = false
        iot_enabled = false
      }
      
      "ap-floor1-02" = {
        device_id     = "AP-SERIAL-002"
        name          = "Floor 1 Conference Room AP"
        map_id        = ""
        x_coordinate  = 300
        y_coordinate  = 400
        led_brightness = 255
        
        radio_24_enabled = true
        radio_5_enabled  = true
        radio_6_enabled  = false
        usb_enabled     = false
        iot_enabled     = false
      }
    }
    
    # Switches (if pre-defined)
    switches = {
      "sw-idf-01" = {
        device_id = "SW-SERIAL-001"
        name      = "IDF-1 Access Switch"
        role      = "access"
        port_config = {
          # Port configuration will be managed via templates
        }
      }
    }
  }
  
  "branch-office-1" = {
    address      = "456 Branch Ave, Branch City, ST 67890, USA"
    country_code = "US"
    timezone     = "America/New_York"
    latitude     = 40.7589
    longitude    = -73.9851
    
    # Smaller branch office configuration
    location_services_enabled = true
    analytics_enabled         = true
    auto_upgrade_enabled      = true
    auto_upgrade_time         = "03:00"  # 3 AM for branch
    
    # Fewer access points for branch
    access_points = {
      "ap-branch1-01" = {
        device_id     = "AP-SERIAL-101"
        name          = "Branch 1 Main AP"
        led_brightness = 255
        radio_24_enabled = true
        radio_5_enabled  = true
        radio_6_enabled  = false
      }
    }
  }
}

# WLAN Configuration
corporate_ssid = "CompanyName-WiFi"
guest_ssid     = "CompanyName-Guest"
iot_ssid       = "CompanyName-IoT"

# Secure IoT PSK (use a strong, unique password)
iot_psk = "YourSecureIoTPSK123!"

# VLAN Configuration
corporate_vlan_id = 100
guest_vlan_id     = 200
iot_vlan_id       = 400

# Network Configuration
corporate_subnet = "10.100.0.0/24"
guest_subnet     = "10.200.0.0/24"
iot_subnet       = "10.400.0.0/24"

corporate_gateway = "10.100.0.1"
guest_gateway     = "10.200.0.1"
iot_gateway       = "10.400.0.1"

# Infrastructure Services
dhcp_servers = ["10.1.1.10", "10.1.1.11"]  # Your DHCP servers
dns_servers  = ["8.8.8.8", "8.8.4.4"]      # Google DNS or your internal DNS

# RADIUS Configuration
radius_auth_servers = [
  {
    host           = "radius1.company.com"
    port           = 1812
    secret         = "your-radius-secret"
    require_message_authenticator = false
    keywrap_enabled = false
  },
  {
    host           = "radius2.company.com"  # Secondary server
    port           = 1812
    secret         = "your-radius-secret"
    require_message_authenticator = false
    keywrap_enabled = false
  }
]

radius_accounting_servers = [
  {
    host           = "radius1.company.com"
    port           = 1813
    secret         = "your-radius-secret"
    require_message_authenticator = false
    keywrap_enabled = false
  }
]

# Guest Portal Configuration
guest_portal_forward_url      = "https://www.company.com"
guest_portal_privacy_url      = "https://www.company.com/privacy"
guest_portal_terms_url        = "https://www.company.com/terms"
guest_portal_sponsors_enabled = false
guest_bandwidth_limit_mbps    = 10

# Quality of Service Configuration
qos_profiles = {
  standard = {
    name        = "Enterprise QoS Profile"
    description = "Standard QoS for enterprise environments"
    
    classes = [
      {
        name                = "Voice"
        dscp_marking        = 46  # EF
        priority            = 7
        guaranteed_bandwidth = 100000   # 100 kbps
        max_bandwidth       = 0         # Unlimited
        queue_size          = 32
      },
      {
        name                = "Video"
        dscp_marking        = 34  # AF41
        priority            = 6
        guaranteed_bandwidth = 2000000  # 2 Mbps
        max_bandwidth       = 0         # Unlimited
        queue_size          = 64
      },
      {
        name                = "Business"
        dscp_marking        = 18  # AF21
        priority            = 4
        guaranteed_bandwidth = 0
        max_bandwidth       = 0
        queue_size          = 64
      },
      {
        name                = "Best_Effort"
        dscp_marking        = 0   # Default
        priority            = 2
        guaranteed_bandwidth = 0
        max_bandwidth       = 0
        queue_size          = 64
      },
      {
        name                = "Background"
        dscp_marking        = 8   # CS1
        priority            = 1
        guaranteed_bandwidth = 0
        max_bandwidth       = 2000000  # 2 Mbps max
        queue_size          = 32
      }
    ]
  }
}

# Security Configuration
wlan_security_settings = {
  corporate = {
    enable_mac_auth          = false
    multi_psk_only          = false
    private_wlan            = true
    eap_reauth              = true
    eap_reauth_period       = 3600
    enable_wireless_bridging = false
    disable_wmm             = false
    disable_ht_cc_protection = false
  }
  
  guest = {
    portal_expire_minutes    = 1440  # 24 hours
    portal_session_timeout   = 0     # No timeout
    portal_idle_timeout      = 1800  # 30 minutes
    portal_bypass_when_cloud_down = false
  }
  
  iot = {
    disable_11ax            = true   # Better IoT compatibility
    disable_wmm             = false
    disable_ht_cc_protection = false
    enable_wireless_bridging = false
  }
}

# RF Management Configuration
rf_management = {
  enable_ai_optimization    = true
  enable_band_steering     = true
  enable_client_balancing  = true
  enable_load_balancing    = true
  enable_airtime_fairness  = true
  
  # Channel settings
  auto_channel_selection   = true
  avoid_dfs_channels      = false
  
  # Power settings
  auto_power_adjustment   = true
  min_power_level         = -10
  max_power_level         = 20
  
  # Client settings
  max_clients_per_ap      = 100
  client_balancing_threshold = 12
  
  # Roaming settings
  enable_fast_roaming     = true
  rssi_threshold          = -70
}

# Monitoring and Analytics Configuration
monitoring_settings = {
  enable_device_profiling     = true
  enable_user_analytics      = true
  enable_application_analytics = true
  enable_location_analytics   = true
  enable_capacity_analytics   = true
  
  # Data retention
  analytics_retention_days    = 90
  event_retention_days       = 30
  
  # Alert thresholds
  device_offline_threshold_minutes = 5
  high_cpu_threshold_percent      = 80
  high_memory_threshold_percent   = 85
  high_channel_utilization_percent = 70
}

# Integration Configuration
integration_settings = {
  # Syslog configuration
  enable_syslog = true
  syslog_servers = [
    {
      host     = "syslog.company.com"
      port     = 514
      facility = 16
      protocol = "udp"
      tag      = "mist"
    }
  ]
  
  # SNMP configuration
  enable_snmp     = true
  snmp_community  = "public"
  snmp_contact    = "network-team@company.com"
  snmp_location   = "Corporate Data Center"
  
  # Webhook configuration
  enable_webhooks = true
  webhook_endpoints = [
    {
      name    = "ITSM Integration"
      url     = "https://your-itsm-system.com/webhook/mist"
      secret  = "webhook-secret"
      events  = ["device-down", "device-up", "alarm-created", "alarm-cleared"]
      enabled = true
    }
  ]
  
  # API rate limiting
  api_rate_limit_enabled = true
  api_rate_limit_requests_per_minute = 1000
}

# Example for Multiple Environments
# Uncomment and modify for staging/development deployments

# For staging environment:
# environment = "staging"
# corporate_ssid = "CompanyName-WiFi-Staging"
# guest_ssid = "CompanyName-Guest-Staging"

# For development environment:
# environment = "development"
# corporate_ssid = "CompanyName-WiFi-Dev"
# guest_ssid = "CompanyName-Guest-Dev"
# monitoring_settings = {
#   enable_device_profiling = false
#   enable_user_analytics = false
#   enable_application_analytics = false
#   enable_location_analytics = false
#   enable_capacity_analytics = true
#   analytics_retention_days = 30
#   event_retention_days = 7
# }